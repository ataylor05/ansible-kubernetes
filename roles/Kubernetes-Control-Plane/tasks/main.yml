---
- name: Open firewall ports
  include_tasks: firewalld.yml

- name: Configure IP forwarding
  shell: |
    modprobe br_netfilter
    firewall-cmd --add-masquerade --permanent
    firewall-cmd --reload
    echo 'net.bridge.bridge-nf-call-ip6tables = 1' > /etc/sysctl.d/k8s.conf
    echo 'net.bridge.bridge-nf-call-iptables = 1' >> /etc/sysctl.d/k8s.conf
    sysctl --system

- name: Disable swap
  shell: |
    swapoff -a
    sed -i '/swap/d' /etc/fstab

- name: Copy Kubernetes repo file
  copy:
    src: kubernetes.repo
    dest: /etc/yum.repos.d/kubernetes.repo
    owner: root
    group: root
    mode: '0644'

- name: Install kubeadm
  dnf:
    name: kubeadm
    state: latest
  when:
    - ansible_facts['distribution'] == "OracleLinux"
    - ansible_facts['distribution_major_version'] == "8"

- name: Install kubeadm
  yum:
    name: kubeadm
    state: latest
  when:
    - ansible_facts['distribution'] == "OracleLinux"
    - ansible_facts['distribution_major_version'] == "7"

- name: Start and enable kubelet
  systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Init a cluster
  shell: |
    kubeadm init --control-plane-endpoint "{{ control_plane_vip_dns }}:6443" --upload-certs --pod-network-cidr {{ pod_network }} > {{ k8s_init_output_file }}
    mkdir -p /home/{{  k8s_admin_user }}/.kube
    cp -i /etc/kubernetes/admin.conf /home/{{  k8s_admin_user }}/.kube/config
    chown {{  k8s_admin_user }}:{{  k8s_admin_user }} /home/{{  k8s_admin_user }}/.kube/config
    sleep 120
  args:
    creates: /etc/kubernetes/admin.conf
    
- name: Configure network CNI
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf
    kubectl apply -f {{  network_overlay }}

- name: Download kubeconfig
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: ~/kubeconfig
    flat: yes

- name: Download k8s init output
  fetch:
    src: "{{ k8s_init_output_file }}"
    dest: ~/k8s-init
    flat: yes